{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPjhrU7uzaEGARqQh6O/EYp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8tbI10TE002o","executionInfo":{"status":"ok","timestamp":1722228680677,"user_tz":-330,"elapsed":443,"user":{"displayName":"parimal .D","userId":"03125005011435680077"}},"outputId":"fd866c40-da86-4cbf-ddf6-e267890e85dd"},"outputs":[{"output_type":"stream","name":"stdout","text":["Total Instances of Dataset:  18\n","   about  am  an  and  awesome  bad  beers  boss  dance  do  ...  tired  to  \\\n","0      0   0   0    0        0    0      0     0      0   0  ...      0   0   \n","1      0   0   0    0        0    0      0     0      1   0  ...      0   1   \n","2      0   0   0    0        0    0      0     0      0   1  ...      0   0   \n","3      0   0   0    0        0    0      0     0      0   0  ...      0   1   \n","4      1   0   0    0        0    0      1     0      0   0  ...      0   0   \n","\n","   today  tomorrow  very  view  we  went  what  will  \n","0      0         0     0     0   0     0     0     0  \n","1      0         0     0     0   0     0     0     0  \n","2      0         0     0     0   0     0     0     0  \n","3      1         0     0     0   0     1     0     0  \n","4      0         0     1     0   0     0     0     0  \n","\n","[5 rows x 49 columns]\n","I love this sandwich -> neg\n","I love to dance -> neg\n","I do not like the taste of this juice -> neg\n","I went to my enemy's house today -> neg\n","I feel very good about these beers -> neg\n","Accuracy Metrics: \n","\n","Accuracy:  0.4\n","Recall:  0.0\n","Precision:  0.0\n","Confusion Matrix: \n"," [[2 0]\n"," [3 0]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1471: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}],"source":["import pandas as pd\n","msg = pd.read_csv('document.csv', names=['message', 'label'])\n","print(\"Total Instances of Dataset: \", msg.shape[0])\n","msg['labelnum'] = msg.label.map({'pos': 1, 'neg': 0})\n","\n","X = msg.message\n","y = msg.labelnum\n","from sklearn.model_selection import train_test_split\n","Xtrain, Xtest, ytrain, ytest = train_test_split(X, y)\n","from sklearn.feature_extraction.text import CountVectorizer\n","\n","count_v = CountVectorizer()\n","Xtrain_dm = count_v.fit_transform(Xtrain)\n","Xtest_dm = count_v.transform(Xtest)\n","\n","df = pd.DataFrame(Xtrain_dm.toarray(),columns=count_v.get_feature_names_out())\n","print(df[0:5])\n","\n","from sklearn.naive_bayes import MultinomialNB\n","clf = MultinomialNB()\n","clf.fit(Xtrain_dm, ytrain)\n","pred = clf.predict(Xtest_dm)\n","\n","for doc, p in zip(Xtrain, pred):\n","    p = 'pos' if p == 1 else 'neg'\n","    print(\"%s -> %s\" % (doc, p))\n","\n","from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score\n","print('Accuracy Metrics: \\n')\n","print('Accuracy: ', accuracy_score(ytest, pred))\n","print('Recall: ', recall_score(ytest, pred))\n","print('Precision: ', precision_score(ytest, pred))\n","print('Confusion Matrix: \\n', confusion_matrix(ytest, pred))"]}]}